#!/bin/bash -e
#
# git-pull-request
#
# License: MIT
# Copyright (c) 2012 Lennart C. L. Kats

OLD=
NO_FETCH=

if [ "$1" == "-o" ]; then
  OLD=-o
  NO_FETCH=-f
  shift
fi

if [ "$1" == "-f" ]; then
  NO_FETCH=-f
  shift
fi

if [ "$1" == "" ]; then
  BRANCH=`git-get-branch`
else
  BRANCH="$1"
fi

# URL encode is required when not using /new/
ENC_BRANCH=`echo -n $BRANCH | sed 's/\//%2F/g'`

REMOTE=`git remote -v | grep 'origin.*push' | grep -oE 'github.com[:/][^/]+/[^\.]+'` ||
(echo 'No remote for current directory' >&2 && exit 1)

if [ ! "$REMOTE" ]; then
  echo Repository not recognized:
  git remote -v
  exit 1
fi

USER=`echo $REMOTE | perl -pe 's|github.com.([^/]+)/.*|$1|'`
REPO=`echo $REMOTE | perl -pe 's|github.com.[^/]+/(.*)|$1|'`
URL=https://github.com/$USER/$REPO/pull

if [ ! $NO_FETCH ]; then
  CURL_OUT=/tmp/git-pr-`date +'%H%M%S'`
# curl --head -s -o $CURL_OUT $URL/$ENC_BRANCH?access_token=$GITHUB_TOKEN  &
  CURL=$!
fi

if [ ! $OLD ] && ! git-is-current $NO_FETCH $BRANCH; then
  echo -n "Branch conflicts with origin/master, continue? [no] "
  read CONSENT
  if [ "$CONSENT" != "y" ] && [ "$CONSENT" != "yes" ]; then
    exit 1
  fi
fi

PUSH_CHANGES=
if ! LOG=`git log origin/$BRANCH..$BRANCH 2>/dev/null` || [ "$LOG" != "" ]; then
  echo -n "origin/$BRANCH is not up-to-date, push latest changes? [yes] "
  read PUSH_CHANGES

  if [ "$PUSH_CHANGES" != "n" ] && [ "$PUSH_CHANGES" != "no" ]; then
    git-push-branch $BRANCH
  fi
fi

#if [ ! $NO_FETCH ] && wait $CURL && grep '1 302' $CURL_OUT &>/dev/null; then
if [ $OLD ]; then
  open $URL/$ENC_BRANCH
else
  open $URL/new/$BRANCH
fi
