#!/bin/bash -e
#
# git-list-pull-requests
#
# License: MIT
# Copyright (c) 2012 Lennart C. L. Kats

function getPulls() {
  curl --compressed -s https://api.github.com/repos/$1/pulls?access_token=$GITHUB_TOKEN |
  node -e '
    var pulls = JSON.parse(require("fs").readFileSync("/dev/stdin", "UTF-8"));
    pulls.map(function(p) {
      if ("'$ALL'" === "-a" || p.user.login === "'$GITHUB_USER'")
        console.log(p.head.ref);
    });
  ' > /tmp/.git-list-r-$2
}

function getAllPulls() {
  INDEX=0
  WAITS_BATCH_PREV=
  while [ $# != 0 ]; do
    WAITS_BATCH=
    for I in {1..3}; do # max 3 concurrent connections
      if [ $# != 0 ]; then
        REPO=$1
        NAME=`echo $REPO | grep -o '^[^:]*'`
        DIR=`echo $REPO | grep -o '[^:]*$'`
        
        (waitExt $WAITS_BATCH_PREV && getPulls $NAME $INDEX) &
        WAITS_BATCH="$! $WAITS_BATCH"
        WAITS_PULLS[$INDEX]=$!
        
        if [ ! $QUIET ] && [ ! $NO_FETCH ]; then
          (waitExt $WAITS_BATCH_PREV && cd $DIR && git fetch -q origin master 2>/dev/null) &
        else
          (echo -n '') & # dummy process
        fi
        WAITS_BATCH="$! $WAITS_BATCH"
        WAITS_FETCH[$INDEX]=$!

        INDEX=$(($INDEX + 1))
        shift
      fi
    done
    WAITS_BATCH_PREV=$WAITS_BATCH
  done
}

function clearLine() {
  for I in {1..100}; do
    echo -ne '\b\b\b\b'
  done
  for I in {1..100}; do
    echo -ne '    '
  done
  for I in {1..100}; do
    echo -ne '\b\b\b\b'
  done
}

function waitExt() {
  for P in $*; do
    while kill -0 $P 2>/dev/null; do
      sleep 0.3
    done
  done
}

if [ "$1" == "-w" ]; then
  open https://github.com/dashboard/pulls
  exit
fi

QUIET=
if [ "$1" == "-q" ]; then
  QUIET=-q
  shift
fi

ALL=
if [ "$1" == "-a" ]; then
  ALL=-a
  QUIET=-q
  shift
fi

if [ "$GITHUB_REPOS" == "" ]; then
  echo 'GITHUB_REPOS not configured; run gitl-setup and/or reopen your shell' >&2
  exit 1
fi

rm -f /tmp/.git-list-*
getAllPulls $GITHUB_REPOS

if [ $QUIET ]; then
  wait $WAITS_BATCH
  cat /tmp/.git-list-r-*
  exit
fi

INDEX=0
for REPO in $GITHUB_REPOS; do
  NAME=`echo $REPO | grep -o '^[^:]*'`
  DIR=`echo $REPO | grep -o '[^:]*$'`
  echo -n === $NAME...
  wait ${WAITS_PULLS[$INDEX]} ${WAITS_FETCH[$INDEX]}
  PULLS=`cat /tmp/.git-list-r-$INDEX`
  if [ "$PULLS" == "" ]; then
    clearLine || :
  else
    echo -e '\b\b\b   '
  fi
  cd $DIR
  for PULL in $PULLS; do
    git-is-current -f $PULL || :
  done
  INDEX=$(($INDEX + 1))
done


